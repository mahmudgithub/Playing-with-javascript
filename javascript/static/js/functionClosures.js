//ক্লোজারস(Closures) নিয়ে ধারণা*************************
// // ক্লোজারসেও আমাদের আলাদা করে কিছু করতে হবে না। বরং এটা জাভাস্ক্রিপ্ট এর বাই ডিফল্ট বিহেভিয়ার। 
// // তবে বুঝার এবং বিভিন্ন টেকনিকের জন্যে অবশ্যই ক্লোজারস সম্পর্কে জানতে হবে। জাভাস্ক্রিপ্ট এর অনেকগুলো 
// // আশ্চর্যজনক বিহেভিয়ার এবং স্পেশালিটির মধ্যে ক্লোজারসও অন্যতম একটা।
// // একটা চাইল্ড ফাংশন সবসময় তার প্যারেন্ট ফাংশনের ভ্যারিয়েবল, ফাংশন অথবা অবজেক্ট অ্যাক্সেস করতে পারে। 
// // কিন্তু এখানে আরো মজার ব্যাপার হচ্ছে ইভেন আমরা যদি প্যারেন্ট ফাংশনটা রিটার্ন করে ফেলি তারপরেও
// //  আমরা চাইল্ড ফাংশন থেকে প্যারেন্ট ফাংশনের ভ্যারিয়েবল, ফাংশন অথবা অবজেক্ট অ্যাক্সেস করতে পারবো। 
// //  কারণ এগুলো রিটার্ন হওয়ার পরও মেমোরী তে থেকে যায়। আর এটাই হচ্ছে ক্লোজারস।
// // আগেই যেহেতু বলেছি এটাও জাভাস্ক্রিপ্ট এর ডিফল্ট বিহেভিয়ার। অর্থাৎ আমাদের ক্লোজারস আলাদা করে
// //  কোড করতে হবে না।
// // এখন কিভাবে এই ক্লোজারস কাজ করে। আমরা জানি জাভাস্ক্রিপ্ট এ আপনি চাইলে ফাংশন থেকেও 
// // আরেকটা ফাংশন রিটার্ন করতে পারবেন। আর তখনি তৈরী হয় প্যারেন্ট-চাইল্ড রিলেশন। আর রিটার্নকৃত ফাংশনের 
// // সবকিছু চাইল্ড ফাংশন চাইলেও অ্যাক্সেস করতে পারে ক্লোজারস এর কারণে।
// function fn(){
//     var s=10;
//     console.log('hello1'+s);
//     return function(){
//         var p=10;
//         console.log('hello2'+p);
//     }
// }
// fn()()
// //or
// fn=(x)=>{
//     console.log(x);
//     return fn2=(y)=>{console.log(y);}
// }
// fn('mahmd')('hossain')
// //এখানে ভিতরের চাইল্ড ফাংশনটা অ্যানিনোমাস ফাংশন যেহেতু এটাকে রিটার্ন করা হচ্ছে সরাসরি,
// // আপনি চাইলে চাইল্ড ফাংশনটাকেও একটা নাম দিতে পারেন তবে কাজে লাগবে না এক্ষেত্রে। 
// //আর তাই closuresDemoএর প্রথম কলে প্রথম প্যারেন্ট ফাংশন এক্সিকিউট হবে এবং আরেকটা কলে চাইল্ড 
// //ফাংশন এক্সিকিউট হবে। তাই এখানে দুইটা ব্র্যাকেটস ()()লেগেছে।



// //আমরা চাইলে প্রথম প্যারেন্ট ফাংশনটা এক্সিকিউট করে একটা ভ্যারিয়েবলে রাখতে পারে,
// // তাহলে এই ভ্যারিয়েবলটাও আরেকটা ফাংশন হয়ে যাবে। আমরা জাভাস্ক্রিপ্ট এ ফাংশনকেও ভ্যারিয়েবলে স্টোর 
// //করতে পারি। এখন এই ভ্যারিয়েবলটে আবার কল করলে ফাইনালী চাইল্ড ফাংশনটাও এক্সিকিউট হয়ে যাবে
// fn=(x)=>{
//     console.log(x);
//     return fn2=(y)=>{console.log(y);}
// }
// const one=fn('mahmud')('hossain')
// one



// //ডাবল ব্র্যাকেটস ইউজ না করে প্রথমে প্যারেন্ট ফাংশনটাকে কল করে একটা ভ্যারিয়েবলে রেখে পরে 
// //আবার সেই ভ্যারিয়েবলের সাহায্যেও চাইল্ড ফাংশনটাকে কল করতে পারবেন
// fn=(x)=>{
//     console.log(x);
//     return fn2=(y)=>{console.log(y);}
// }
// const one=fn('mahmud')
// const two=fn('hossain')



// //এই ফাংশনটাকে আর্গুমেন্টসহ পাস করে কল করলে দেখবেন এটা প্যারেন্ট থেকে 
// //নেওয়া aএবং চাইল্ডের bএকসাথে যোগ করে সেটার সাম দেখাচ্ছেঃ
// fn=(a)=>{
//     return fn2=(b)=>{
//         console.log(a+b);
//     }
// }
// fn(2)(5)