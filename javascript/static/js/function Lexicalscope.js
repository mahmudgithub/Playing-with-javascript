//লেক্সিকাল স্কোপিং(Lexical Scoping): 
// //লেক্সিকাল স্কোপিং এ একটা প্যারেন্ট ফাংশনের সাথে একটা চাইল্ড ফাংশনের রিলেশন তৈরী হয়। 
// //এখন প্যারেন্ট-চাইল্ড ফাংশন মানে কি? হ্যাঁ যদি আমরা একটা ফাংশনের ভিতরে আরেকটা ফাংশন ডিক্লেয়ার করি,
// // তাহলে যে ফাংশনের ভিতরে নতুন ফাংশন ডিক্লেয়ার করলাম সেটা প্যারেন্ট ফাংশন। আর প্যারেন্ট ফাংশনের ভিতরে
// // ডিক্লেয়ারকৃত অন্য যেকোনো ফাংশনই সেই প্যারেন্ট ফাংশনের চাইল্ড ফাংশন। নিচের উদাহরণ থেকে আশা করি ক্লিয়ার
// // ধারণা হবেঃ
// fn=(a)=>{
//     console.log('i am outer function');
//     fn2=(b)=>{console.log('i am inner function',+a+b);}
//     fn2(2)
// }
// fn(2)

// //or
// parent=()=>{
//     var x=2;
//     child=()=>{
//         var y=3;
//         console.log(`sum : ${x+y}`);
//     }
//     child()
// }
// parent()
// //এখন এখানে parentFunction()গ্লোবাল ফাংশন আর childFunction()parentFunction()এর 
// //লোকাল ফাংশন। এখন আমরা জানি কোনো ফাংশনের ভিতরে ডিক্লেয়ারকৃত ভ্যারিয়েবল, ফাংশন বা অবজেক্ট
// // লোকাল স্কোপ পায় এবং এদেরকে শুধুমাত্র উক্ত ফাংশনের ভিতরেই অ্যাক্সেস করা যায়। কিন্তু লেক্সিকাল স্কোপিং এর
// // কারণে এখানে parentFunction()এর ভিতরে ডিক্লেয়ারকৃত লোকাল যেকোনো কিছু parentFunction()এর ভিতর
// // থেকে তো অ্যাক্সেস করা যাবেই এবং সেই সাথে এর সব চাইল্ড ফাংশন এর ভিতর থেকেও, 
// //এখানে childFunction()এর ভিতর থেকেও অ্যাক্সেস করা যাবে।

