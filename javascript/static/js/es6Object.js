//how to an object values access by map function*****************************


//অবজেক্ট এ লুপ চালানো***************************
//আমরা অ্যারের উপর বিভিন্নভাবে লুপ চালাতে পারি।
// ট্র্যাডিশনাল forদিয়ে বা এগুলো ইউজ করেও লুপ চালাতে পারি। 
//এখানেও আপনি forইউজ করে লুপ চালিয়ে কাজ করতে পারবেন
// const obj={
//     banglasdesh:'dhaka',
//     india:'dilli',
//     pakistan:'korachici'
// }
// for(item in obj)
//find only object propertics এটা শুধুমাত্র কীগুলো প্রিন্ট করবেঃ
// console.log(item);
//find object propertic value এদের ভ্যালুগুলো সহজেই পেতে পারিঃএটা ভ্যালুগুলো প্রিন্ট করবেঃ
// console.log(obj[item]);



//object constructor ******************************************
// কিন্তু আমাদের এমন সিচুয়েশান আসতে পারে 
// যেখানে কোনো অবজেক্ট এর উপর অ্যারের মতোই লুপ চালানো লাগতে পারে।
// যদিও এভাবেও সব কাজ করা যায়, তবে জাভাস্ক্রিপ্ট ডেভেলপাররা ফাংশনাল প্রোগ্রামিংকে বেশী পছন্দ করে। 
// আর forইউজ করাটাও সেকেলে দেখায়। তাছাড়া এখানে ভ্যলু সবগুলো আবার অ্যারেতে নিয়ে যেতে হলেও 
// একটু ঝামেলা পোহাতে হবে। আর তাই এর চেয়ে বেশী ইউজফুল সিস্টেমে কিভাবে করা যায় সেটা আমি আজকে 
// আলোচনা করবো।
// আমি এখন সব দেশের ক্যাপিটাল গুলো প্রিন্ট করতে চাচ্ছি। এখন এর জন্যে আমরা Objectকন্সট্রাকটরের মেথডগুলো 
// দেখতে পারি। এখানে প্রত্যেকটা বানানো অবজেক্ট এরই Objectকন্সট্রাকটর থাকে।
// object.constructor===object
// আমরা চাইলে obj.constructorও ইউজ করতে পারি আবার ডিরেক্ট Objectকন্সট্রাকটর ও ইউজ করতে পারি। 
// এখন এই কন্সট্রাকটরের ভিতরে কিছু মেথড আছে যেগুলো আমরা দেখতে পারিঃ keys() and values()
//এখানে দুইটা মেথড খুঁজে পাবেন keysআর valuesনামে।

//values method***************************
//এখন আমাদের অবজেক্ট এর ভ্যালুগুলো পেতে চাইলে এখানে valuesনামে যে মেথড আছে সেটা ইউজ করতে হবে।
//  ভ্যালু আর্গুমেন্ট হিসেবে আমাদের অবজেক্ট অ্যাক্সেপ্ট করবে এবং সবশেষে ভ্যালুগুলো অ্যারে হিসাবে রিটার্ণ করবে।
// const obj={
//     banglasdesh:'dhaka',
//     india:'dilli',
//     pakistan:'korachici'
// }
// console.log(Object.values(obj));

//এখন রিটার্ণ করা অ্যারেটাকে ভ্যারিয়েবলে স্টোর করে রাখতে পারি পরবর্তিতে ব্যবহার করার জন্যে
// const another=Object.values(obj);
// console.log(another);

//এখানে যেকোনোভাবেই লুপ চালাতে পারবেন।//এখন পুরোটা কাজ একেবারে এভাবেও করা যাবেঃ
// const lol=another.map((item,index,array)=>{
//     console.log(` name is : ${item} and index is: ${index} and array is: ${array}`);
// })


//key method *****************
// এ তো গেলো শুধুমাত্র ভ্যালু নিয়ে খেলা। এবার যদি আমাদের কী গুলোও দরকার লাগে তাহলে কি করা যেতে পারে?
//  হ্যা, সেক্ষেত্রেই দ্বিতীয় মেথড keysকাজে লাগবে। আমাদের উদাহরণ নেওয়া অবজেক্ট টাতে দেশের নামসহ ক্যাপিটাল
//   প্রিন্ট করতে চাইলে আগের valuesমেথডের মতোই keysমেথডও কাজ করবে। কিন্তু এক্ষেত্রে keysকী 
//   গুলো রিটার্ণ করবে। এবং পরবর্তিতে আমরা এই কী গুলো ব্যবহার করে ভ্যালুগুলোও বের করতে পারবো। 
//   মানে কী আর ভ্যালু দুইটা নিয়েই কাজ করা যাবে।
// const obj={
//     banglasdesh:'dhaka',
//     india:'dilli',
//     pakistan:'korachici'
// }
//only key or propertics access
// console.log(Object.keys(obj));

//keep propertics to anothr variable,
//এবার এই নতুন অ্যারেকে কোথাও স্টোর করে রাখতে পারি পরবর্তিতে ইউজ করার জন্যে।
// const country=Object.keys(obj);
// console.log(country);

//এখান থেকেও map() দিয়ে আমরা কাজ করতে পারবোঃ,কী দিয়ে ভ্যালু বের করা যায় সেটা
// const lol2=country.map((item,index,array)=>{
//     console.log(`country name is : ${item}  and city is : ${obj[item]}` );
// })

// আর ES6 সিনট্যাক্স ইউজ করলেঃ
// Object.keys(obj).map((item,index,array) => {console.log(`Capital of ${item} is: ${obj[item]}`)});


//why use braket, not dot notation
//তবে এখানে আমাদের অবশ্যই ব্রাকেট নোটেশান ইউজ করতে হবে,
// আপনি যদি ডট নোটেশান ইউজ করেন এভাবে obj.countryতাহলে আপনার প্রোগ্রাম objএর ভিতরে 
// countryনামে প্রপার্টি খুঁজবে। কিন্তু আপনার objএর ভিতরে কিন্তু countryনামে কোনো প্রপার্টি নাই
//  বা আপনি countryনামেও কিছু চাচ্ছেন না। আপনি আসলে আর্গুমেন্ট এ প্রত্যেকটা কী countryথেকে পাচ্ছেন। 
//  ঠিক countryনা, বরং প্রথম লুপে Bangladesh, দ্বিতীয় লুপে India এভাবে countryএর ভ্যালু চ্যাঞ্জ হচ্ছে। 
//  এই জন্যে ডট নোটেশান কাজ করবে না। আপনাকে অবশ্যই ব্র্যাকেট নোটেশানই কাজ করতে হবে।

// Rad article link:https://js.zonayed.me/daily/post-3 